#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5456
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[System.Data.Linq.Mapping.DatabaseAttribute(Name="Music")]
public partial class MusicDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void Insertalbum(album instance);
  partial void Updatealbum(album instance);
  partial void Deletealbum(album instance);
  #endregion
	
	public MusicDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MusicConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public MusicDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public MusicDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public MusicDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public MusicDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<album> albums
	{
		get
		{
			return this.GetTable<album>();
		}
	}
}

[Table(Name="dbo.albums")]
public partial class album : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _album_id;
	
	private string _album_name;
	
	private string _album_artist;
	
	private System.Nullable<double> _album_price;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onalbum_idChanging(string value);
    partial void Onalbum_idChanged();
    partial void Onalbum_nameChanging(string value);
    partial void Onalbum_nameChanged();
    partial void Onalbum_artistChanging(string value);
    partial void Onalbum_artistChanged();
    partial void Onalbum_priceChanging(System.Nullable<double> value);
    partial void Onalbum_priceChanged();
    #endregion
	
	public album()
	{
		OnCreated();
	}
	
	[Column(Storage="_album_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string album_id
	{
		get
		{
			return this._album_id;
		}
		set
		{
			if ((this._album_id != value))
			{
				this.Onalbum_idChanging(value);
				this.SendPropertyChanging();
				this._album_id = value;
				this.SendPropertyChanged("album_id");
				this.Onalbum_idChanged();
			}
		}
	}
	
	[Column(Storage="_album_name", DbType="VarChar(100)")]
	public string album_name
	{
		get
		{
			return this._album_name;
		}
		set
		{
			if ((this._album_name != value))
			{
				this.Onalbum_nameChanging(value);
				this.SendPropertyChanging();
				this._album_name = value;
				this.SendPropertyChanged("album_name");
				this.Onalbum_nameChanged();
			}
		}
	}
	
	[Column(Storage="_album_artist", DbType="VarChar(100)")]
	public string album_artist
	{
		get
		{
			return this._album_artist;
		}
		set
		{
			if ((this._album_artist != value))
			{
				this.Onalbum_artistChanging(value);
				this.SendPropertyChanging();
				this._album_artist = value;
				this.SendPropertyChanged("album_artist");
				this.Onalbum_artistChanged();
			}
		}
	}
	
	[Column(Storage="_album_price", DbType="Float")]
	public System.Nullable<double> album_price
	{
		get
		{
			return this._album_price;
		}
		set
		{
			if ((this._album_price != value))
			{
				this.Onalbum_priceChanging(value);
				this.SendPropertyChanging();
				this._album_price = value;
				this.SendPropertyChanged("album_price");
				this.Onalbum_priceChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
